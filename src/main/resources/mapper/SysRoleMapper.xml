<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.adminmanage.dao.SysRoleMapper">
  <resultMap id="BaseResultMap" type="com.springboot.adminmanage.model.SysRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, description, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springboot.adminmanage.model.SysRole">
    insert into sys_role (id, name, description, 
      createTime, updateTime)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.springboot.adminmanage.model.SysRole">
    insert into sys_role
    <selectKey keyProperty="id" order="AFTER" resultType="int">
      select last_insert_id();

    </selectKey>
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.adminmanage.model.SysRole">
    update sys_role
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.adminmanage.model.SysRole">
    update sys_role
    set name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="selectOneRoleByRoleName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_role
    where name = #{name,jdbcType=VARCHAR}
  </select>


  <select id="selectAllRoles"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_role
  </select>



  <select id="queryRolesPage" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select

    r.id,
    r.name,
    r.description,
    r.createTime,
    r.updateTime
    from sys_role r

      order by  r.createTime desc limit #{pageNum},#{pageSize}
  </select>



  <select id="selectRoleCounts" resultType="java.lang.Integer">
    select

      count(*)
    from sys_role
  </select>



  <select id="queryRolesPageSearch" parameterType="java.util.Map" resultMap="BaseResultMap">
    select

    r.id,
    r.name,
    r.description,
    r.createTime,
    r.updateTime
    from sys_role r

    where 1=1
    <if test="name !=null and name !=''">
      and r.name like CONCAT ('%',#{name},'%')
    </if>

      order by  r.createTime desc limit #{pageNum},#{pageSize}
  </select>




</mapper>